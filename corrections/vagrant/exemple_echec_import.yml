---
# ============================================================================
# üî¥ EXEMPLE D'√âCHEC CONCRET AVEC import_tasks
# ============================================================================
#
# Ce playbook va √âCHOUER volontairement pour d√©montrer les limites d'import_tasks
#
# OBJECTIF P√âDAGOGIQUE :
# Montrer qu'on ne peut PAS utiliser une variable d√©finie dynamiquement
# dans le nom du fichier avec import_tasks
#
# ============================================================================

- name: "üî¥ D√âMONSTRATION : √âchec garanti avec import_tasks"
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: "√âtape 1 : Afficher le but de cette d√©mo"
      ansible.builtin.debug:
        msg: |
          üéì Cette d√©monstration va √âCHOUER volontairement.

          OBJECTIF : Montrer qu'import_tasks ne peut PAS utiliser 
          une variable d√©finie pendant l'ex√©cution.

    - name: "√âtape 2 : D√©finir une variable pendant l'ex√©cution"
      ansible.builtin.set_fact:
        nom_fichier_taches: "mes_taches.yml"

    - name: "√âtape 3 : Afficher la variable"
      ansible.builtin.debug:
        msg: "La variable nom_fichier_taches = {{ nom_fichier_taches }}"

    # ‚ùå‚ùå‚ùå LA T√ÇCHE CI-DESSOUS VA √âCHOUER ‚ùå‚ùå‚ùå
    - name: "√âtape 4 : üö´ √âCHEC - Tentative d'import avec variable dynamique"
      ansible.builtin.import_tasks: "{{ nom_fichier_taches }}"
      #
      # ERREUR ATTENDUE :
      # "The offending line appears to be: ..."
      # "The variable 'nom_fichier_taches' is not defined"
      #
      # POURQUOI ?
      # import_tasks est √©valu√© au PARSE TIME (avant l'ex√©cution)
      # √Ä ce moment-l√†, la variable n'existe pas encore !

    - name: "√âtape 5 : Cette t√¢che ne sera jamais ex√©cut√©e"
      ansible.builtin.debug:
        msg: "Si vous voyez ce message, c'est magique ! ü™Ñ"
# ============================================================================
# EXPLICATION POUR L'√âL√àVE
# ============================================================================
#
# CHRONOLOGIE DE L'√âCHEC :
#
# 1. Ansible PARSE le playbook (avant toute ex√©cution)
#    ‚îú‚îÄ> Il voit import_tasks: "{{ nom_fichier_taches }}"
#    ‚îú‚îÄ> Il essaie de r√©soudre la variable
#    ‚îî‚îÄ> ‚ùå ERREUR : la variable n'existe pas encore !
#
# 2. L'ex√©cution ne commence m√™me pas
#    ‚îî‚îÄ> Les set_fact ne sont jamais ex√©cut√©s
#
# SOLUTION :
# Utiliser include_tasks √† la place (voir exemple_succes_include.yml)
#
# ============================================================================

# Pour comparer, d√©commentez le play ci-dessous qui FONCTIONNE :

# - name: "‚úÖ VERSION QUI FONCTIONNE avec nom de fichier fixe"
#   hosts: localhost
#   connection: local
#   gather_facts: no
#
#   tasks:
#     - name: "√âtape 1 : D√©finir une variable"
#       ansible.builtin.set_fact:
#         nom_fichier_taches: "mes_taches.yml"
#
#     - name: "√âtape 2 : ‚úÖ Import avec nom fixe (pas de variable)"
#       ansible.builtin.import_tasks: mes_taches.yml
#       # Ceci fonctionne car le nom est fixe, pas dynamique


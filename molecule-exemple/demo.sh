#!/bin/bash
# üé¨ Script de d√©monstration Molecule
# Ce script guide √† travers les √©tapes de Molecule avec des explications

set -e

# Couleurs pour le terminal
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher et attendre
show_step() {
    echo ""
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}$1${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    if [ "$2" != "skip_wait" ]; then
        read -p "Appuyez sur Entr√©e pour continuer..."
    fi
}

# Fonction pour ex√©cuter une commande avec explication
run_cmd() {
    echo -e "${YELLOW}> $1${NC}"
    echo ""
    eval "$1"
    echo ""
}

# V√©rifier qu'on est dans le bon r√©pertoire
cd "$(dirname "$0")/nginx-simple"

# Intro
clear
echo -e "${GREEN}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                               ‚ïë
‚ïë          üß™  D√âMONSTRATION ANSIBLE MOLECULE  üß™               ‚ïë
‚ïë                                                               ‚ïë
‚ïë     Ce script va vous guider √† travers un test Molecule      ‚ïë
‚ïë                                                               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"
echo ""
echo "Nous allons tester un r√¥le qui installe nginx"
echo ""
read -p "Appuyez sur Entr√©e pour commencer..."

# √âtape 1 : Montrer la structure
show_step "üìÅ √âTAPE 1 : Structure du projet"
run_cmd "tree -L 3 ."

show_step "üîß √âTAPE 2 : Configuration Molecule (molecule.yml)" "skip_wait"
echo "Ce fichier d√©finit :"
echo "  ‚Ä¢ Sur quel OS tester (Ubuntu 22.04)"
echo "  ‚Ä¢ Comment cr√©er l'environnement (Docker)"
echo ""
read -p "Appuyez sur Entr√©e pour voir le fichier..."
run_cmd "cat molecule/default/molecule.yml"

show_step "üéØ √âTAPE 3 : Playbook d'application (converge.yml)" "skip_wait"
echo "Ce fichier dit comment appliquer le r√¥le"
echo ""
read -p "Appuyez sur Entr√©e pour voir le fichier..."
run_cmd "cat molecule/default/converge.yml"

show_step "‚úÖ √âTAPE 4 : Tests de v√©rification (verify.yml)" "skip_wait"
echo "Ce fichier contient tous les tests √† ex√©cuter"
echo ""
read -p "Appuyez sur Entr√©e pour voir le fichier..."
run_cmd "cat molecule/default/verify.yml"

show_step "üê≥ √âTAPE 5 : Cr√©er l'environnement de test"
echo "Molecule va cr√©er un conteneur Docker avec Ubuntu"
echo ""
run_cmd "molecule create"

show_step "üìã √âTAPE 6 : V√©rifier que le conteneur existe"
run_cmd "molecule list"

show_step "üöÄ √âTAPE 7 : Appliquer le r√¥le (converge)"
echo "Molecule va installer et configurer nginx"
echo ""
run_cmd "molecule converge"

show_step "üîç √âTAPE 8 : Se connecter au conteneur" "skip_wait"
echo "Vous pouvez maintenant explorer le conteneur"
echo ""
echo "Essayez ces commandes une fois connect√© :"
echo "  ‚Ä¢ curl localhost          (voir la page nginx)"
echo "  ‚Ä¢ systemctl status nginx  (v√©rifier le service)"
echo "  ‚Ä¢ cat /var/www/html/index.html"
echo "  ‚Ä¢ exit                    (pour sortir)"
echo ""
read -p "Appuyez sur Entr√©e pour vous connecter..."
molecule login || true

show_step "‚úÖ √âTAPE 9 : Lancer les tests (verify)"
echo "Molecule va v√©rifier que tout fonctionne"
echo ""
run_cmd "molecule verify"

show_step "üóëÔ∏è  √âTAPE 10 : Nettoyer (destroy)"
echo "Molecule va supprimer le conteneur"
echo ""
run_cmd "molecule destroy"

# Conclusion
clear
echo -e "${GREEN}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                               ‚ïë
‚ïë                  ‚úÖ  D√âMONSTRATION TERMIN√âE  ‚úÖ               ‚ïë
‚ïë                                                               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"
echo ""
echo "üéâ F√©licitations ! Vous avez vu toutes les √©tapes de Molecule"
echo ""
echo "Pour refaire tout le cycle automatiquement :"
echo -e "${YELLOW}  molecule test${NC}"
echo ""
echo "Pour plus d'informations :"
echo "  ‚Ä¢ README.md (dans ce dossier)"
echo "  ‚Ä¢ QUICK_START.md (guide rapide)"
echo "  ‚Ä¢ EXPLICATION_SIMPLE.md (concepts d√©taill√©s)"
echo ""

